<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seu.cose.seu_comp.dao.UserEntityMapper">
  <resultMap id="BaseResultMap" type="com.seu.cose.seu_comp.entity.UserEntity">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CardID" jdbcType="VARCHAR" property="cardID" />
    <result column="NickName" jdbcType="VARCHAR" property="nickname" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="PhoneNum" jdbcType="VARCHAR" property="mobile" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="Gender" jdbcType="BIT" property="gender" />
    <result column="AccountType" jdbcType="BIT" property="isAdmin" />
    <result column="ActivateStatus" jdbcType="BIT" property="isActivated" />
    <result column="Birthday" jdbcType="DATE" property="birthday" />
    <result column="RegisterDate" jdbcType="DATE" property="regDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, CardID, NickName, Password, PhoneNum, Email, Gender, AccountType, ActivateStatus, Birthday, RegisterDate
  </sql>
  
  <select id="getUsers" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByExample" parameterType="com.seu.cose.seu_comp.entity.UserEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.seu.cose.seu_comp.entity.UserEntityExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.seu.cose.seu_comp.entity.UserEntity">
    insert into users (ID, CardID, NickName, 
      Password, PhoneNum, Email, 
      Gender, AccountType, ActivateStatus, 
      Birthday, RegisterDate)
    values (#{id,jdbcType=INTEGER}, #{cardID,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{gender,jdbcType=BIT}, #{isAdmin,jdbcType=BIT}, #{isActivated,jdbcType=BIT}, 
      #{birthday,jdbcType=DATE}, #{regDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.seu.cose.seu_comp.entity.UserEntity">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="cardID != null">
        CardID,
      </if>
      <if test="nickname != null">
        NickName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="mobile != null">
        PhoneNum,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="gender != null">
        Gender,
      </if>
      <if test="isAdmin != null">
        AccountType,
      </if>
      <if test="isActivated != null">
        ActivateStatus,
      </if>
      <if test="birthday != null">
        Birthday,
      </if>
      <if test="regDate != null">
        RegisterDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cardID != null">
        #{cardID,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="regDate != null">
        #{regDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.seu.cose.seu_comp.entity.UserEntityExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cardID != null">
        CardID = #{record.cardID,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        NickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        PhoneNum = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        Gender = #{record.gender,jdbcType=BIT},
      </if>
      <if test="record.isAdmin != null">
        AccountType = #{record.isAdmin,jdbcType=BIT},
      </if>
      <if test="record.isActivated != null">
        ActivateStatus = #{record.isActivated,jdbcType=BIT},
      </if>
      <if test="record.birthday != null">
        Birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.regDate != null">
        RegisterDate = #{record.regDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set ID = #{record.id,jdbcType=INTEGER},
      CardID = #{record.cardID,jdbcType=VARCHAR},
      NickName = #{record.nickname,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      PhoneNum = #{record.mobile,jdbcType=VARCHAR},
      Email = #{record.email,jdbcType=VARCHAR},
      Gender = #{record.gender,jdbcType=BIT},
      AccountType = #{record.isAdmin,jdbcType=BIT},
      ActivateStatus = #{record.isActivated,jdbcType=BIT},
      Birthday = #{record.birthday,jdbcType=DATE},
      RegisterDate = #{record.regDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.seu.cose.seu_comp.entity.UserEntity">
    update users
    <set>
      <if test="cardID != null">
        CardID = #{cardID,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        NickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        PhoneNum = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        Gender = #{gender,jdbcType=BIT},
      </if>
      <if test="isAdmin != null">
        AccountType = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="isActivated != null">
        ActivateStatus = #{isActivated,jdbcType=BIT},
      </if>
      <if test="birthday != null">
        Birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="regDate != null">
        RegisterDate = #{regDate,jdbcType=DATE},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.seu.cose.seu_comp.entity.UserEntity">
    update users
    set CardID = #{cardID,jdbcType=VARCHAR},
      NickName = #{nickname,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      PhoneNum = #{mobile,jdbcType=VARCHAR},
      Email = #{email,jdbcType=VARCHAR},
      Gender = #{gender,jdbcType=BIT},
      AccountType = #{isAdmin,jdbcType=BIT},
      ActivateStatus = #{isActivated,jdbcType=BIT},
      Birthday = #{birthday,jdbcType=DATE},
      RegisterDate = #{regDate,jdbcType=DATE}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>